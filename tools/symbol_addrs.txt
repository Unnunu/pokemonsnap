osTvType = 0x80000300;
entry_point = 0x80000400;
get_thread4_stack_start = 0x80000460;
check_sp_imem = 0x80000480;
check_sp_dmem = 0x800004B0;
fatal_stack_overflow_thread = 0x800004E0;
check_stack_probes = 0x80000510;
thread5_main = 0x800005D8;
thread1_idle = 0x800007C4;
game_main = 0x80000870;
sc_execute_blocking = 0x800009A0;
scAddClient = 0x80000A08;
scMain = 0x80002510;
create_dma_mq = 0x800029E0;
load_overlay = 0x80002B64;
dma_rom_read = 0x80002C20;
dma_rom_write = 0x80002C5C;
loadCompressedData = 0x8000350C; //
contReadAndUpdate = 0x80004838;
contUpdate = 0x80004860;
contSetUpdateEveryTick = 0x800048B8;
contIsPrinterAvailable = 0x80004E7C;
contPrinterGetStatus = 0x80004EA4;
contPrinterSendCommand = 0x80004EE4;
thread6_controllers = 0x8000527C;
gtl_set_segment_F = 0x80005418;
hal_alloc = 0x800054A0;
gtl_reset = 0x80005A98;
gtl_load_ucode = 0x80005E64;
gtl_process_all_dlists = 0x80005F34;
gtl_combine_all_dlists = 0x80006330;
gtl_wait_all_gfx_tasks_done = 0x80006764;
om_setup_scene = 0x800073AC;
gtl_set_intervals = 0x800075fc;
reset_bump_alloc = 0x80007850;
bump_alloc = 0x8000785C;
init_bump_alloc = 0x800078C4;
vi_set_screen_offsets = 0x80007A34;
vi_apply_screen_settings = 0x80007BC4;
om_get_sobj = 0x80008AD8;
om_create_process = 0x80008C28;
om_end_process = 0x80008F2C;
om_dobj_add_mtx = 0x80008FFC;
om_dobj_append_mtx = 0x80009760;
om_camera_add_mtx = 0x80009790;
om_dobj_add_aobj = 0x80009918;
om_dobj_reset_animation = 0x80009984;
om_mobj_add_aobj = 0x800099E4;
om_mobj_reset_aobj_list = 0x80009A50;
om_dobj_add_mobj = 0x80009B7C;
om_gobj_add_dobj = 0x80009D70;
om_dobj_add_sibling = 0x80009E20;
om_dobj_add_child = 0x80009E94;
om_dobj_remove = 0x80009F2C;
om_gobj_add_sprite = 0x8000A0B4;
om_gobj_remove_sprite = 0x8000A18C;
om_gobj_set_camera = 0x8000A200;
om_add_gobj = 0x8000A410;
om_link_gobj_dl = 0x8000A8A4;
om_link_gobj_dl_camera = 0x8000AA0C;
om_move_gobj_dl = 0x8000AB30;
sendSignalToLink = 0x8000B830;
omh_end_all_object_processes = 0x8000BE5C;
create_sprite = 0x8000C37C;
create_camera = 0x8000C3FC;

func_8000C550 = 0x8000C550;
set_model_animation_speed = 0x8000C5B4;
set_model_and_texture_animation_speed = 0x8000C5FC;
set_texture_animation_speed = 0x8000C660;
set_model_animation = 0x8000C7CC;
set_model_tree_animation = 0x8000C83C;
set_model_tree_texture_animation = 0x8000C8D8;
update_model_tree_animation = 0x8000E9D8;
set_camera_animation = 0x8001054C;
update_camera_animation = 0x80011090;

draw_sprite = 0x80017768;
camera_init = 0x80017ADC;
camera_prepare_matrix = 0x8001837C;
camera_pre_render = 0x80018CDC;
camera_render_by_link = 0x80018D08;
camera_render_objects = 0x80018FF0;
camera_post_render = 0x800190E4;
sprite_camera_render = 0x8001977C;

hal_mtx_f2l = 0x8001B0F0;
hal_mtx_f2l_fixed_w = 0x8001B320;
fast_sinf = 0x8001B4D4;
fast_cosf = 0x8001B51C;
hal_look_at_f = 0x8001B570;
hal_look_at = 0x8001B7FC;
hal_look_at_roll_f = 0x8001B870;
hal_look_at_roll = 0x8001BB48;
hal_look_at_reflect_f = 0x8001BBC4;
hal_look_at_reflect = 0x8001BFAC;
hal_look_at_reflect_roll_f = 0x8001C024;
hal_look_at_reflect_roll = 0x8001C450;
hal_ortho_f = 0x8001C4D0;
hal_ortho = 0x8001C664;
hal_perspective_fast_f = 0x8001C6C8;
hal_perspective_fast = 0x8001C8F4;
hal_perspective_f = 0x8001C94C;
hal_perspective = 0x8001CB14;
hal_scale_f = 0x8001CB6C;
hal_scale = 0x8001CC00;
hal_scale_mul_f = 0x8001CCA4;
hal_translate_f = 0x8001CDA4;
hal_translate = 0x8001CE44;
hal_rotate_f= 0x8001CEF8;
hal_rotate = 0x8001D078;
hal_rotate_translate_f = 0x8001D0C4;
hal_rotate_translate = 0x8001D120;
hal_rotate_translate_scale_f = 0x8001D184;
hal_rotate_translate_scale = 0x8001D1F0;
hal_rotate_rpy_f = 0x8001D26C;
hal_rotate_rpy = 0x8001D3A0;
hal_rotate_rpy_translate_f = 0x8001D648;
hal_rotate_rpy_translate = 0x8001D69C;
hal_rotate_rpy_translate_scale_f = 0x8001D9A4;
hal_rotate_rpy_translate_scale = 0x8001DA08;
hal_rotate_pyr_f = 0x8001DDFC;
hal_rotate_pyr = 0x8001DF34;
hal_rotate_pyr_translate_f = 0x8001DF78;
hal_rotate_pyr_translate = 0x8001DFCC;
hal_rotate_pyr_translate_scale_f = 0x8001E028;
hal_rotate_pyr_translate_scale = 0x8001E08C;
hal_rotate_py_f = 0x8001E100;
hal_rotate_py = 0x8001E1CC;
hal_rotate_py_translate_f = 0x8001E20C;
hal_rotate_py_translate = 0x8001E25C;
hal_rotate_rp_f = 0x8001E2B0;
hal_rotate_rp = 0x8001E37C;
hal_rotate_rp_translate_f = 0x8001E3BC;
hal_rotate_rp_translate = 0x8001E40C;
hal_rotate_yaw_f = 0x8001E460;
hal_rotate_yaw = 0x8001E4F0;
hal_rotate_yaw_translate_f = 0x8001E528;
hal_rotate_yaw_translate = 0x8001E574;
hal_rotate_pitch_f = 0x8001E5C0;
hal_rotate_pitch = 0x8001E650;
hal_rotate_pitch_translate_f = 0x8001E688;
hal_rotate_pitch_translate = 0x8001E6D4;
hal_rotate_f_deg = 0x8001E720;
hal_rotate_deg = 0x8001E774;
hal_rotate_translate_f_deg = 0x8001E7DC;
hal_rotate_translate_deg = 0x8001E844;
hal_rotate_rpy_f_deg = 0x8001E8C0;
hal_rotate_rpy_deg = 0x8001E924;
hal_rotate_rpy_translate_f_deg = 0x8001E99C;
hal_rotate_rpy_translate_deg = 0x8001EA0C;

alHeapInit = 0x8001FD40;
alHeapAlloc = 0x8001FD74;

thread4_audio = 0x800216A8;
start_thread8_rmon = 0x80025C38;
fatal_printf = 0x80025F24;

spColor = 0x80026140;
spSetAttribute = 0x80026170;
spSetZ = 0x80026180;
spMove = 0x80026188;
spScissor = 0x80026194;
drawbitmap = 0x800261B8;
spInit = 0x800278D4;
spDraw = 0x80027A00;
spFinish = 0x80028730;
spClearAttribute = 0x800287F0;
spScale = 0x80028850;

alCSeqNew = 0x80028A10;
alCSeqNextEvent = 0x80028B34;
__alCSeqNextDelta = 0x80028C38;
__alCSeqGetTrackEvent = 0x80028DA4;
alCSeqTicksToSec = 0x80028FF8;
alCSeqNewMarker = 0x80029168;
alCSeqSetLoc = 0x800292D4;
alCSeqGetLoc = 0x80029374;
__getTrackByte = 0x80029414;
__readVarLen = 0x800294D4;

alSndpNew = 0x80029540;
_sndpVoiceHandler = 0x8002966C;
_handleEvent = 0x80029714;
_removeEvents = 0x80029B24;
_DivS32ByF32 = 0x80029BC4;
alInit = 0x80029C10;
alClose = 0x80029C44;
alLink = 0x80029C7C;
alUnlink = 0x80029CA0;
alSynSetVol = 0x80029CD0;
alEvtqNew = 0x80029D70;
alEvtqNextEvent = 0x80029DF4;
alEvtqPostEvent = 0x80029E80;
alEvtqFlush = 0x80029FA0;
alEvtqFlushType = 0x8002A010;
alSynFreeVoice = 0x8002A0C0;
alSynAllocVoice = 0x8002A170;
_allocatePVoice = 0x8002A2AC;
alSynStartVoice = 0x8002A3D0;
alSynSetPitch = 0x8002A520;
alSynSetPan = 0x8002A5B0;
alSynNew = 0x8002A6A0;
alAudioFrame = 0x8002A9A0;
__allocParam = 0x8002AB70;
__freeParam = 0x8002ABA0;
_collectPVoices = 0x8002ABB8;
_freePVoice = 0x8002AC18;
_timeToSamplesNoRound = 0x8002AC50;
_timeToSamples = 0x8002AC9C;
__nextSampleTime = 0x8002ACC0;
_init_lpfilter = 0x8002AD20;
alFxNew = 0x8002ADC0;
alEnvmixerNew = 0x8002B1E0;
alLoadNew = 0x8002B288;
alResampleNew = 0x8002B330;
alAuxBusNew = 0x8002B3BC;
alMainBusNew = 0x8002B410;
alSaveNew = 0x8002B464;
alMainBusPull = 0x8002B4B0;
alMainBusParam = 0x8002B5D0;
alFxPull = 0x8002B600;
alFxParam = 0x8002B934;
alFxParamHdl = 0x8002B94C;
_loadOutputBuffer = 0x8002BBAC;
_loadBuffer = 0x8002BDCC;
_saveBuffer = 0x8002BF68;
_filterBuffer = 0x8002C100;
_doModFunc = 0x8002C1B0;
alAuxBusPull = 0x8002C260;
alAuxBusParam = 0x8002C338;
alEnvmixerPull = 0x8002C370;
alEnvmixerParam = 0x8002C878;
_pullSubFrame = 0x8002C958;
_frexpf = 0x8002CC40;
_ldexpf = 0x8002CD2C;
_getRate = 0x8002CD54;
_getVol = 0x8002CF38;
alResamplePull = 0x8002CFE0;
alResampleParam = 0x8002D1D8;
alAdpcmPull = 0x8002D2D0;
alRaw16Pull = 0x8002D710;
alLoadParam = 0x8002DAC0;
_decodeChunk = 0x8002DC94;
alFilterNew = 0x8002DE50;
alSynSetFXMix = 0x8002DF10;
alSavePull = 0x8002DFB0;
alSaveParam = 0x8002E03C;
alCSPNew = 0x8002E180;
__CSPVoiceHandler = 0x8002E2F8;
__CSPPostNextSeqEvent = 0x8002E9E8;
__CSPHandleNextSeqEvent = 0x8002EA58;
__CSPHandleMIDIMsg = 0x8002EB20;
__CSPHandleMetaMsg = 0x8002FC04;
__CSPRepostEvent = 0x8002FD94;
__setUsptFromTempo_copy = 0x8002FE34;
alSeqpNew = 0x80030080;
__seqpVoiceHandler = 0x8003020C;
__postNextSeqEvent = 0x8003075C;
__handleNextSeqEvent = 0x80030838;
__handleMIDIMsg = 0x800308EC;
__handleMetaMsg = 0x80031188;
__mapVoice = 0x800311F8;
__unmapVoice = 0x8003125C;
__lookupVoice = 0x800312CC;
__lookupSoundQuick = 0x8003133C;
__vsVol = 0x8003144C;
__vsDelta = 0x800314EC;
__vsPan = 0x80031510;
__seqpReleaseVoice = 0x80031560;
__voiceNeedsNoteKill = 0x8003168C;
__initFromBank = 0x80031730;
__setInstChanState = 0x800317E4;
__resetPerfChanState = 0x80031840;
__initChanState = 0x800318C8;
__seqpStopOsc = 0x80031950;
__setUsptFromTempo = 0x80031A54;
alSynSetPriority = 0x80031A90;
alSeqNew = 0x80031AB0;
alSeqNextEvent = 0x80031B90;
__alSeqNextDelta = 0x80031CFC;
alSeqTicksToSec = 0x80031D60;
alSeqSecToTicks = 0x80031DB4;
alSeqNewMarker = 0x80031E98;
alSeqGetTicks = 0x80031FB8;
alSeqSetLoc = 0x80031FC0;
alSeqGetLoc = 0x80031FDC;
read8 = 0x80031FF8;
read16 = 0x8003200C;
read32 = 0x80032044;
readVarLen = 0x80032094;
alCopy = 0x800320E0;
alSynAddPlayer = 0x800321F0;
alCents2Ratio = 0x800322D0;
alSynStartVoiceParams = 0x80032320;
alSynAllocFX = 0x80032470;
alSynDelete = 0x800325A0;
alSynStopVoice = 0x800325B0;

osSendMesg = 0x80032630;
osStopThread = 0x80032780;
osRecvMesg = 0x80032840;
osSetIntMask = 0x80032980;
sinf = 0x80032A20;
osSpTaskLoad = 0x80032CFC;
osSpTaskStartGo = 0x80032E8C;
osDestroyThread = 0x80032ED0;
__osEnqueueAndYield = 0x800338BC; //
__osEnqueueThread = 0x800339BC; //
__osDispatchThread = 0x80033A14; //
__osPopThread = 0x80033A04; //
__osCleanupThread = 0x80033B90;
__osDequeueThread = 0x80033BA0; //
bzero = 0x80033BE0;
osGbpakPower = 0x80033C80;
osGbpakCheckConnector = 0x80033D90;
__osMotorAccess = 0x80034230;
_MakeMotorData = 0x80034398;
osMotorInit = 0x800344A4;
__osSiGetAccess = 0x80034650;
__osSiRelAccess = 0x80034694;
osContInit = 0x800346C0;
__osContGetInitData = 0x80034830;
__osPackRequestData = 0x80034900;
osCreateThread = 0x80034A00;
osContStartReadData = 0x80034B50;
osContGetReadData = 0x80034BD4;
__osPackReadData = 0x80034C60;
osVirtualToPhysical = 0x80034D30;
osWritebackDCache = 0x80034DB0;
osInitialize = 0x80034E30;
__createSpeedParam = 0x800350F0;
__osSetSR = 0x80035250;
__osGetSR = 0x80035260;
osViGetNextFramebuffer = 0x80035270;
osGbpakInit = 0x800352B0;
__osSiRawStartDma = 0x80035560;
osViBlack = 0x80035660;
osSpTaskYield = 0x80035720;
osViSetMode = 0x80035740;
osCreatePiManager = 0x80035870;
__osPiCreateAccessQueue = 0x800359E0;
__osDevMgrMain = 0x80035AA0;
__osPiRawStartDma = 0x80035E30;
osGetCount = 0x80036010;
osSetEventMesg = 0x80036020;
sqrtf = 0x80036090;
osContStartQuery = 0x800360A0;
osContGetQuery = 0x80036124;
guMtxF2L = 0x80036210;
guMtxIdentF = 0x80036310;
guMtxIdent = 0x80036398;
guMtxL2F = 0x800363C8;
guMtxXFMF = 0x80036480;
guMtxCatF = 0x80036520;
osGbpakGetStatus = 0x80037350;
osUnmapTLBAll = 0x80037530;
osEPiStartDma = 0x80037580; // type:func rom:0x38180
osJamMesg = 0x800378C0;
osCreateMesgQueue = 0x80037700;
osInvalICache = 0x80037730;
osInvalDCache = 0x800377B0;
__osSpDeviceBusy = 0x80037860;
osSetThreadPri = 0x80037A10;
osGetThreadPri = 0x80037AF0;
osViSwapBuffer = 0x80037B10;
__osEPiRawStartDma = 0x80037B60;
osSpTaskYielded = 0x80037D40;
bcmp = 0x80037DC0;
__osTimerServicesInit = 0x80037F70;
__osTimerInterrupt = 0x80037FFC;
__osSetTimerIntr = 0x80038174;
__osInsertTimer = 0x800381E8;
__osSetCompare = 0x800385A0;
__osGetActiveQueue = 0x800385B0;
bcopy = 0x800385C0;
__osViInit = 0x80038930;
__osViSwapContext = 0x80038A70;
__osDisableInt = 0x80038D70;
__osRestoreInt = 0x80038D90;
osPiGetCmdQueue = 0x80038DB0;
cosf = 0x80038DE0;
osCartRomInit = 0x80039040;
osGbpakReadId = 0x80039220;
__osPfsSelectBank = 0x800393E0;
__osSetFpcCsr = 0x80039460;
osPfsFileState = 0x80039470;
osPfsInitPak = 0x8003A1D0;
__osPfsGetStatus = 0x8003A3C0;
__osPfsRequestOneChannel = 0x8003A490;
__osPfsGetOneChannelData = 0x8003A554;
__osEPiRawReadIo = 0x8003B320;
osYieldThread = 0x8003B4E0;
__osEPiRawWriteIo = 0x8003BB20;
osViSetEvent = 0x80038FD0;
__osContRamWrite = 0x8003B530;
__osContRamRead = 0x8003B780;
__osContAddressCrc = 0x8003B9B0;
__osContDataCrc = 0x8003BA80;
osSetTimer = 0x8003BC80;
osDpSetNextBuffer = 0x8003CCA0;
__osSpSetStatus = 0x8003CD80;
osCreateViManager = 0x8003CDA0;
viMgrMain = 0x8003CF20;
__osViGetCurrentContext = 0x8003D0B0;
osWritebackDCacheAll = 0x8003D0C0;
osStartThread = 0x8003D0F0;
osViSetYScale = 0x8003D240;
osGbpakReadWrite = 0x8003D4B0;
osViGetCurrentFramebuffer = 0x8003D820;
__osSetWatchLo = 0x8003D8A0;
sNoThread5 = 0x80040CE4;
sResetRdp = 0x80040DA8;
gPreRenderFunc = 0x80040D60;
sIdentityMatrix = 0x80040D68;
__osRunningThread = 0x80042CC0;
__osRunQueue = 0x80042CB8;
__osActiveQueue = 0x80042CBC;
__osPiDevMgr = 0x80042D10;
__osCurrentHandle = 0x80042D30;
D_80042D10 = 0x80042D10;
D_80042D18 = 0x80042D18;
__osPiAccessQueueEnabled = 0x80042D40;
__osTimerList = 0x80042DA0;
osViModeNtscLan1 = 0x80042DB0;
osViModeMpalLan1 = 0x80042E00;
vi = 0x80042E50;
__osViCurr = 0x80042EB0;
__osViNext = 0x80042EB4;
__osViDevMgr = 0x80042F70;
__additional_scanline = 0x80042F8C;
D_80042FC0 = 0x80042FC0;
gThread5 = 0x80046880;
gRspBootCode = 0x800483E0;
gSPImemOkay = 0x800484E0;
gSPDmemOkay = 0x800484E1;
gThreadingQueue = 0x800484E8;
scViModeNext = 0x800487A8;
scViSettingsUpdated = 0x800487F8;
scUnknownInt = 0x80048814;
scTimeSpentGfx = 0x80048824;
scTimeSpentAudio = 0x80048828;
scViSettings = 0x8004882C;
scUnknownU64 = 0x80048830;
scTaskQueue = 0x80048868;
scBeforeReset = 0x8004888C;
gRomPiHandle = 0x800488A0;
sNumControllers = 0x800489F8;
sControllerIndices = 0x800489FC;
gContInput = 0x80048A88;
gContInputCurrentButtons = 0x80049750;
gContInputPressedButtons = 0x80049752;
gContInputHeldButtons = 0x80049754;
gContInputReleasedButtons = 0x80049756;
gContInputStickX = 0x80049758;
gContInputStickY = 0x80049759;
piThread = 0x80098230;
piThreadStack = 0x800983E0;
piEventQueue = 0x800993E0;
piEventBuf = 0x800993F8;
__osPiAccessQueue = 0x80099408;
__osCurrentTime = 0x800994C0;
__osBaseCounter = 0x800994C8;
__osViIntrCount = 0x800994CC;
__osTimerCounter = 0x800994D0;
viThread = 0x800996A0;
viEventQueue = 0x8009A850;
viEventBuf = 0x8009A868;
viRetraceMsg = 0x8009A880;
viCounterMsg = 0x8009A898;
retrace = 0x8009A8B0;

start_scene_manager = 0x8009B49C;
getLevelId = 0x8009B980;
setLevelId = 0x8009B98C;
getLevelName = 0x8009B998;
func_800AAED0 = 0x800AAED0;
func_800AAEE8 = 0x800AAEE8;
func_800AAF10 = 0x800AAF10;
gLevelID = 0x800AC0C0;
gLevelNames = 0x800AC0C4;
gPhotoCount = 0x800AC0E0;
D_800AF3D0 = 0x800AF3D0;
getCurrentRoom = 0x800E2184;
inRange_DEBUG = 0x800E3FF0; // type:func rom:0x617A0
bool_DEBUG = 0x800E4018; // type:func
globalRoomGFX = 0x800E6AD0;
evolveIntoMuk = 0x802C0810; // rom:0x642CC0
beachSpawnMagikarpAtGObj = 0x802C40A0; // type:func rom:0x55C110
beachAnimalData = 0x802CBEE4; // type:data size:0x110
D_802CBFF4 = 0x802CBFF4; // type:data
spawnStaryuAtGeo = 0x802D2580;
spawnStarmieAtGeo = 0x802D25B0;
spawnKoffingSmoke = 0x802DE52C;
D_802E31F4 = 0x802E31F4;
D_802E3208 = 0x802E3208;
D_802E321C = 0x802E321C;
koffingSmokeData = 0x802E3254;
extraStaryuDef = 0x802ECAE0;
extraStarmieDef = 0x802ECAF0;
D_802ECB00 = 0x802ECB00;
D_802EC7B8 = 0x802EC7B8;
D_802ECB2C = 0x802ECB2C;
updateAnimalState = 0x8035EC58; // segment:app_level
weightedRandomStaightTransition = 0x8035ECAC; // segment:app_level
runPathProcess = 0x8035EDF8; // segment:app_level
animalUVStuff = 0x8035EFCC; // type:func rom:0x4FF3DC segment:app_level
setAnimalAnimation = 0x8035F138; // segment:app_level
forceAnimalAnimation = 0x8035F15C; // segment:app_level
runInteractionsAndWaitForFlags = 0x8035FBF0; // segment:app_level
runAnimalCleanup = 0x8035FD70; // segment:app_level
addAnimalAtGeo = 0x8035FE24; // segment:app_level
setNodePosToNegRoom = 0x80362050; // segment:app_level
animalPathLoop = 0x803620C8; // segment:app_level
spawnAnimalUsingDeltaHeight = 0x80362E5C; // segment:app_level
animalAddOne = 0x80363C48; // segment:app_level
animalAdd = 0x80363A8C; // segment:app_level
cartGObj = 0x803937F0;
beachAnimalAdd = 0x802C42D4; // type:func rom:0x55C344 segment:beach_code
func_800E6238_639E8 = 0x800E6238; // type:func rom:0x0639E8 segment:level_low

mem_alloc = 0x8036A194;
mem_free = 0x8036A228;
mem_create_heap = 0x8036A3F8;